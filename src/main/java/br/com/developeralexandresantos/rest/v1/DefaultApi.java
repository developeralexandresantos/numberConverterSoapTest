/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package br.com.developeralexandresantos.rest.v1;

import br.com.developeralexandresantos.model.GenericMessage;
import br.com.developeralexandresantos.model.NoContentType;
import br.com.developeralexandresantos.model.NumberToWordsResponseType;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletableFuture;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-10-20T02:26:42.096-03:00[America/Sao_Paulo]")
@Api(value = "Default", description = "the Default API")
public interface DefaultApi {

    DefaultApiDelegate getDelegate();

    @ApiOperation(value = "Realiza a conversão do número", nickname = "obterConversao", notes = "Converte um número informado em texto", response = NumberToWordsResponseType.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = NumberToWordsResponseType.class),
        @ApiResponse(code = 204, message = "Sem conteudo.", response = NoContentType.class),
        @ApiResponse(code = 400, message = "Entrada/operação ilegal.", response = GenericMessage.class),
        @ApiResponse(code = 401, message = "Não autorizado.", response = GenericMessage.class),
        @ApiResponse(code = 403, message = "Proibido.", response = GenericMessage.class),
        @ApiResponse(code = 404, message = "Não encontrado.", response = GenericMessage.class),
        @ApiResponse(code = 422, message = "Não é possível processar a instrução.", response = GenericMessage.class),
        @ApiResponse(code = 500, message = "Ocorreu um erro interno.", response = GenericMessage.class) })
    @RequestMapping(value = "/api/converter/{numero}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default CompletableFuture<ResponseEntity<NumberToWordsResponseType>> obterConversao(@ApiParam(value = "",required=true) @PathVariable("numero") Integer numero) {
        return getDelegate().obterConversao(numero);
    }

}
